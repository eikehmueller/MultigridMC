name: Testing

on:
  push:    
  pull_request:
    branches: main

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  AutomatedTesting:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Download CholMod
      working-directory: ${{github.workspace}}
      run: mkdir cholmod; apt-get download libcholmod3; ls; dpkg -x libcholmod*.deb cholmod

    - name: Download Eigen
      run: git clone https://gitlab.com/libeigen/eigen.git; cd eigen; git checkout 3.4

    - name: Configure Eigen
      working-directory: ${{github.workspace}}/eigen
      run: cmake -B ${{github.workspace}}/eigen/build -DCMAKE_INSTALL_PREFIX=${{github.workspace}}/eigen/build
      
    - name: Install Eigen
      working-directory: ${{github.workspace}}/eigen
      run: cmake --install build

    - name: Download libconfig
      run: git clone https://github.com/hyperrealm/libconfig.git; cd libconfig

    - name: Configure libconfig
      working-directory: ${{github.workspace}}/libconfig
      run: cmake -B ${{github.workspace}}/libconfig/build -DCMAKE_INSTALL_PREFIX=${{github.workspace}}/libconfig/build
    
    - name: Build libconfig
      working-directory: ${{github.workspace}}/libconfig
      run: cmake --build build
    
    - name: Install libconfig
      working-directory: ${{github.workspace}}/libconfig
      run: cmake --install build

    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DEigen3_DIR=${{github.workspace}}/eigen/build -Dlibconfig_DIR=${{github.workspace}}/libconfig/build/lib/cmake/libconfig/ -DCMAKE_LIBRARY_PATH=${{github.workspace}}/libconfig/build/lib -DUSE_THOROUGH_TESTS=ON

    - name: Build
      # Build your program with the given configuration
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

    - name: Test
      working-directory: ${{github.workspace}}/build
      # Execute tests
      run: bin/test --gtest_color=yes